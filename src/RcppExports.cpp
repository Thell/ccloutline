// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ccl_borders
Rcpp::NumericMatrix ccl_borders(const arma::mat& m);
RcppExport SEXP _ccloutline_ccl_borders(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(ccl_borders(m));
    return rcpp_result_gen;
END_RCPP
}
// ccl_outlines
Rcpp::List ccl_outlines(const arma::mat& m, const bool min_first);
RcppExport SEXP _ccloutline_ccl_outlines(SEXP mSEXP, SEXP min_firstSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type m(mSEXP);
    Rcpp::traits::input_parameter< const bool >::type min_first(min_firstSEXP);
    rcpp_result_gen = Rcpp::wrap(ccl_outlines(m, min_first));
    return rcpp_result_gen;
END_RCPP
}
// ccl_cycles
Rcpp::List ccl_cycles(const arma::mat& m, bool reverse);
RcppExport SEXP _ccloutline_ccl_cycles(SEXP mSEXP, SEXP reverseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type m(mSEXP);
    Rcpp::traits::input_parameter< bool >::type reverse(reverseSEXP);
    rcpp_result_gen = Rcpp::wrap(ccl_cycles(m, reverse));
    return rcpp_result_gen;
END_RCPP
}
// ccl_edges
Rcpp::List ccl_edges(const arma::mat& m);
RcppExport SEXP _ccloutline_ccl_edges(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(ccl_edges(m));
    return rcpp_result_gen;
END_RCPP
}
// ccl_profile
Rcpp::List ccl_profile(arma::mat input, bool reverse);
RcppExport SEXP _ccloutline_ccl_profile(SEXP inputSEXP, SEXP reverseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type input(inputSEXP);
    Rcpp::traits::input_parameter< bool >::type reverse(reverseSEXP);
    rcpp_result_gen = Rcpp::wrap(ccl_profile(input, reverse));
    return rcpp_result_gen;
END_RCPP
}
// ccl_labels
Rcpp::List ccl_labels(const arma::mat& m);
RcppExport SEXP _ccloutline_ccl_labels(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(ccl_labels(m));
    return rcpp_result_gen;
END_RCPP
}
// ccl_paths
Rcpp::List ccl_paths(const arma::mat& m, const bool reverse);
RcppExport SEXP _ccloutline_ccl_paths(SEXP mSEXP, SEXP reverseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type m(mSEXP);
    Rcpp::traits::input_parameter< const bool >::type reverse(reverseSEXP);
    rcpp_result_gen = Rcpp::wrap(ccl_paths(m, reverse));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ccloutline_ccl_borders", (DL_FUNC) &_ccloutline_ccl_borders, 1},
    {"_ccloutline_ccl_outlines", (DL_FUNC) &_ccloutline_ccl_outlines, 2},
    {"_ccloutline_ccl_cycles", (DL_FUNC) &_ccloutline_ccl_cycles, 2},
    {"_ccloutline_ccl_edges", (DL_FUNC) &_ccloutline_ccl_edges, 1},
    {"_ccloutline_ccl_profile", (DL_FUNC) &_ccloutline_ccl_profile, 2},
    {"_ccloutline_ccl_labels", (DL_FUNC) &_ccloutline_ccl_labels, 1},
    {"_ccloutline_ccl_paths", (DL_FUNC) &_ccloutline_ccl_paths, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_ccloutline(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
